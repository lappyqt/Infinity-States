@{
    ViewBag.Title = ViewBag.Article.Title + " - Edit";
}

<div class="textblock" x-data="{ previewView: true, fileContainerView: false }">
    <form class="editorForm" method="post" action="/Articles/Update/" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <input name="id" type="hidden" id="articleId" value="@ViewBag.Article.Id">
        
        <div x-show="fileContainerView" x-cloak x-on:drop="previewView = true, fileContainerView = false"
        x-transition:enter.duration.320ms class="file-container">

            <span id="main-title">Place your poster here or <a onclick="fileInput.click()">open explorer</a></span>
            <input name="poster" autocomplete="off" value="@ViewBag.Article.Poster" x-on:change.prevent="PosterPreview.showPreview($el.files[0], $el), previewView = true, fileContainerView = false" type="file" class="poster" hidden>
        </div>

        <div x-show="previewView" x-cloak x-transition:enter.duration.300ms class="poster-preview">
            <img class="poster" src="@ViewBag.Article.Poster">
            <span x-on:click="previewView = false, fileContainerView = true, PosterPreview.clearFileInput(fileInput)" class="preview-close"><img width="16" height="16" src="~/img/exit.svg"></span>
        </div>

        <input name="title" type="text" class="title" placeholder="Title..." value="@ViewBag.Article.Title">
        <div contenteditable="true" class="content" data-placeholder="Write an interesting story...">@ViewBag.Article.Content</div>
        <button type="submit" class="publish">Update</button>
        <button type="button" x-on:click="window.location = `${window.origin}/account`" class="link-button">Discard</button>

        <input class="hidden-content" name="content" type="hidden" hidden>
    </form>

    <tool-panel enable-tools="true"></tool-panel>
</div>

<script>
    const content = document.querySelector(".content");
    content.innerHTML = content.innerText;

    window.onsubmit = () => Helpers.FormHelper.setHiddenValue(document.querySelector(".content"), document.querySelector(".hidden-content"));
    document.ondragover = (event) => event.preventDefault();

    const posterContainer = document.querySelector('img.poster');
    const fileContainer = document.querySelector(".file-container");
    const fileInput = document.querySelector("input.poster");

    window.onload = () => {
        const posterPreview = new Editor.PosterPreview(fileContainer, posterContainer, fileInput);
    }
</script>